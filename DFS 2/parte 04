MEGA SPORTTRAINING
MEGA Sport Training es un juego realizado por Flying Beast Labs como parte del proyecto de musealización MEGA (Mundo Estrella Galicia) en la ciudad de A Coruña. Consiste en una colección de minijuegos deportivos (baloncesto, fútbol, hockey y rugby) y basa su uso en la plataforma Kinect, por lo que los visitantes juegan con su propio cuerpo. Tras finalizar cada sesión, las puntuaciones del jugador y su fotografía tomada en tiempo real son enviadas a su correo electrónico en forma de cromo utilizando el sistema de pulseras NFC y redes del museo. El juego fue realizado teniendo en cuenta las características del museo y la infraestructura de su proyecto, así como el branding del cliente.
La principal complejidad del proyecto MEGA Sport Training estribaba en las condiciones del entorno museístico. Ni el diseño, ni el arte, ni la programación de mecánicas fueron un problema. Mucho menos el sonido, que se redujo al mínimo para no perturbar la exposición en la que el juego estaría incluido. En este sentido, el desarrollo fue como la seda.
Sin embargo, por motivos de compatibilidad y homogenización de la plataforma hardware del museo, tuvimos que limitarnos a un hardware muy específico:
•Pantalla Samsung mod DB 55 E. HD 1.920 x 1.080 (16:9). Orientación: Vertical •Microsoft Kinect 2 (la versión que venía originalmente con XBOX One). Ideal para las interacciones en espacios públicos dado que la interacción está basada en el movimiento del cuerpo humano. Permite comportamientos relativamente complejos con un control muy intuitivo sin necesidad de que el usuario tenga que coger nada.
· Ordenador Intel Nuc (2016)
· Procesador: Intel® CoreTM i7-6770HQ processor Quad Core, 6 MB Cache, 45W
· RAM: Dual channel DDR4-2133+ SODIMMs 1.2/1.35V, 32GB maximum
· GPU: Intel® IrisTM Pro Graphics 580. 1x HDMI* 2.0 (4K 60 Hz). 1x Mini DisplayPort* 1.2 (4K 60 Hz). 1x DisplayPort* 1.2 via Type-C
· Audio: Up to 7.1 multichannel digital audio via HDMI or DisplayPort signals.
· Software OS: Windows 10

Aquí es cuando comenzaron las complicaciones. Empezando por el final, el ordenador tenía unas limitaciones técnicas con las que hubo que lidiar, sobre todo porque hablamos de un hardware de 2016 y periféricos de 2014. Fue necesario controlar los elementos en pantalla y, además, tuvimos que optimizar el código para que, pese a los filtros de cámara, partículas y otros efectos, el juego fuera fluido.
El mayor problema, sin embargo, fue Kinect. The root of all evil, que dicen los yanquis. Kinect fue deprecado definitivamente en 2018, aunque llevaba ya sin fabricarse desde octubre de 2017, y la última versión no era compatible con Windows 10 a partir de cierta revisión. Esto no sólo significaba que nos enfrentábamos a un proyecto con en el que no contaríamos con ningún tipo de soporte por parte del fabricante del periférico principal, sino que además su mayor enemigo en temas compatibilidad se trataba de ellos mismos a través de las actualizaciones obligatorias de Windows 10.
¡Y por si fuera poco en la actualidad no existe ningún framework oficial que sirva de enlace entre la máquina y las últimas versiones de Unity! Por ello, nos enfrentamos a la decisión de crear el nuestro o buscar alguno de terceros. Finalmente nos decidimos por utilizar un set libre de un particular que nos permitía dar más fluidez a los gestos, aunque durante el desarrollo tuvimos que reprogramar ciertas funciones que no se adaptaban 100% a las necesidades de nuestro producto.
Ésta no sería la única sorpresa que nos encontraríamos. Los primeros días de pruebas con el hardware, dos portátiles que usamos en la empresa para testear fueron literalmente fundidos por Kinect. El USB 3.0 sobre el que Kinect funcionaba no tenía soporte para las versiones posteriores de los chips de 2016 y funcionalmente daba problemas con el USB 2.0 desde el punto de vista eléctrico (vamos, que los quemaba). Nada más empezar, el proyecto fue dos placas bases menos rentable de lo que nos esperábamos. Una vez determinados los ordenadores con l
os que podíamos trabajar (dos semanas en las que tuvimos la suerte de contar con un par de PCs de esa generación, y de que la buena gente de Estrella Galicia nos prestó uno de los terminales del museo), llegó la siguiente sorpresa.
Directamente desde Microsoft
Uno de nuestros ordenadores se actualizó a la versión 1809 de Windows 10, lo que hizo que Kinect dejara directamente de funcionar. Como pudimos comprobar, los cambios en dicha versión implican la deprecación de los drivers y librerías que dan soporte a Kinect 2.
Por supuesto, revertimos a la versión anterior y desactivamos el Windows Update de Windows 10. Al fin y al cabo, un ordenador de un museo puede mantenerse desactualizado, dado que su uso es muy específico. Al día siguiente, de forma aparentemente mágica, nuestro ordenador estaba de nuevo actualizado. Resulta que Windows Update se reactiva automáticamente cuando así lo decide.
Así que nos tocó improvisar... Capamos todo tipo de conexiones externas (IPs, accesos DNS, puertos...) a las plataformas de actualización de Windows 10. Tuvimos que implementar la desactivación manual de los servicios que implican esta funcionalidad, pero manteniendo la conectividad para la implementación de las funciones de comunicación con los servidores del museo y sistemas de correo electrónico, utilizados por la aplicación para el envío de correos de fidelización a los usuarios.
Todo esto ocurrió sin habernos puesto siquiera a prototipar. Los programadores iban con la lengua fuera para cumplir plazos y no quemar más ordenadores. Como comentamos más arriba, la parte pura de desarrollo no fue problemática, aunque sí hubo unas cuantas contusiones (sobre todo al probar el minijuego de baloncesto en techos bajos).
El mayor problema de esta etapa fue conseguir que Kinect se comportara como necesitábamos. Algunos de los gestos que incluía el framework no eran precisos, con
lo que prácticamente cualquier movimiento
los hacía saltar... y a veces al revés, eran tan específicos que debían producirse a la perfección para ejecutarse. La captura de movimiento directa resultaba poco predecible y el personaje adoptaba posturas antinaturales que afeaban el flujo de juego. Es por esto que el juego
se centró en capturar movimientos específicos (sin precisión milimétrica) y reproducir animaciones preparadas para simular el movimiento del usuario, pero dentro de un flujo predefinido.

Otro problema con el que nos encontramos es que Kinect a veces se apagaba sin previo aviso, incluso en plena ejecución. El problema era que incluso con la versión adecuada de Windows, no había una compatibilidad 100% con el ordenador y existían también problemas con la gestión de energía. Para solventarlo, tuvimos que poner los niveles de energía de bajo consumo de recursos (contrariamente a lo que la lógica no invitaba a pensar).
Aunque la cosa mejoró, el problema persistía y el Kinect que estaba en el museo empezó a dar fallos también. Esta vez nos costó más dar con una solución. Además, en ese momento, ambos dispositivos eran necesarios en el museo, por lo que nos tocó llamar a todos los Cash Converters de Madrid y quemar Wallapop para hacernos con
Kinects en tiempo récord. Todo el mundo se sorprendía de que no quisiéramos comprar la Xbox, sólo la cámara esa que no habían usado nunca. Los responsables del museo hicieron algo similar porque es posible que a lo largo de la vida del museo vayan a necesitar repuestos.
Tras mucho investigar, descubrimos que el culpable era cargador. ¡El oficial! El que venía con Kinect. Por alguna razón, dicho cargador a veces provocaba bajadas de tensión. La solución fue cambiar los cargadores de Kinect
por otros compatibles que tuvieran una mayor corriente de funcionamiento, y unos latiguillos USB 3.0 de mayor calidad, cuyos conectores no hicieran falso contacto.
A partir de aquí hubo otros problemas, pero mucho más manejables. Por ejemplo, debido a su tamaño, Kinect no veía bien a los niños, así que tuvimos que estar unatarde andando de rodillas (imagínense la escena un señor de 46 años y 105 Kg de peso corriendo de rodillas por el museo) para cuadrar bien las alturas. Básicamente, necesitábamos que Kinect cogiera el espacio mínimo que pudieran sumar un niño y un adulto para evitar que funcionara con otros visitantes que estuvieran simplemente de paso.
El último problema fueron los correos electrónicos y la conexión con las muñequeras RIF que se usan en la identificación de los visitantes. Esto fue curioso porque aparentemente era un fallo de conexión con los servidores. Finalmente se detectó que era un problema de identificación de los puertos donde estaban funcionando los servicios.
Para terminar por todo lo alto, cuando todo parecía funcionar... simplemente dejó de hacerlo. ¡Pero en la oficina iba bien! Tras varios ataques de pánico, alguno de corazón y la inauguración a tres días, se descubrió que el modo de compilación final (optimizado) perdía librerías y había que instalarlas manualmente en el dispositivo.
Pese a todo esto, el juego estuvo listo para la inauguración del museo y ahora puede disfrutarse sin problemas. Esperamos haber hecho justicia a la marca Estrella Galicia y a los equipos que patrocina.
También esperamos no volver a trabajar con Kinect (al menos la versión 2).
La inauguración del museo MEGA Estrella Galicia tuvo lugar el 19 de Junio de 2019 y está abierto al público. MEGA Sport Training forma parte de la exposición permanente.



ENTREVISTA A HEYNAU

1) ¿Podrías explicarnos quien eres, cómo has empezado en esto de los videojuegos, y cual es tu sueño?
Me llamo Nau y soy desarrollador de juegos para móvil a través de mi propio estudio unipersonal. Al estar yo solo, por lo general, me dedico yo mismo al diseño, arte, programación y a mover todos mis proyectos. También me dedico a documentar todo esto a través de un canal de YouTube (/HeyNau), donde comparto todosmisavances,consejosyexperiencias en la industria.
Empecé en esto de los videojuegos en 2015, tras acabar un ciclo de Animación 3D, videojuegos y entornos interactivos, donde conocí la existencia de los motores de desarrollo, accesibles para cualquier persona, pensaba que esto era solo de grandes estudios americanos. En cuanto pude empecé a trastear con estos motores desde casa.

2) ¿Cómo has aprendido a diseñar y desarrollar videojuegos?
Absolutamente todo lo que sé sobre videojuegos lo aprendí con YouTube. A pesar de haber hecho un ciclo superior, este solo me formó en cuanto 3D y edición de vídeo, fue a través de los vídeotutoriales que empecé a aprender todo lo que necesito hoy en día para desarrollar mis juegos.
3) Hay actualmente una grande cantidad de cursos de diseño y desarrollo de videojuegos, online, presenciales, en academias, de másteres, y de grados. Creesquesonnecesariosparalaindustria? Si si, cual crees que son los mas idóneos para alguien que se quiera iniciar?
Hoy en día hay una gran burbuja en la enseñanza de videojuegos. En muchos círculos del sector se comenta que “En la fiebre del oro, el que se hace rico es el que vende las palas”, y es algo que viendonúmeros se puede ver la gravedad a la que nos enfrentamos.
Las escuelas privadas, por lo general, superan los 5.000 euros por año de formación. Si hablamos de un Grado ya son más de 20.000 euros por los 4 años (sin contar gastos del díaadía)porteneruntítuloquehoyendía no te asegura un puesto de trabajo, y si lo hace, es posible que cobres ligeramente por encima del salario mínimo. Esto quiere decir que tardarías décadas en reembolsar tu formación.
Por lo poco que sé, de anécdotas de antiguos estudiantes, no recomendaría un curso privado sobre desarrollo a no ser que sea por pasión y que seas de una familia adinerada. Aunque he de admitir, que en cuanto a los cursos de arte y 3D creo que la situación está bastante mejor.
Mi recomendación personal para saber elegir uno de estos cursos sobre programación o game design sería:
1Haz un juego por tu cuenta, algo pequeño pero totalmente terminado. Un proyecto de solo unos días.
2Aprende durante este proyecto todo lo que puedas y asegúrate de qué rama te apasiona más. Esto solo se puede saber probando a hacer todo. Hay mucha gente que me dice “Qué debo estudiar para hacer videojuegos?”, y no sé que responder cuando ni ellos saben en qué departamento quieren participar. Arte? Programación? Gestión? Diseño? Marketing? Música?...
3Infórmate de todas las escuelas relacionadas con lo tuyo que puedas, especialmente las públicas, donde puedes encontrar el ciclo de DAM, carrera de informática, bellas artes, etc.
4-Sobretodo en el caso de las privadas, habla con ex-alumnos. Quizás es lo más importante de todo. Te van a prometer profesores en activo, charlas del programador jefe de Ubisoft, bolsas de trabajo en Projekt red y mil cosas más. No te fies. Contacta en privadoconexalumnosypreguntalessobre su experiencia real.
Y si se diera el caso de que no puedes permitirte nada de esto, siempre cabe la posibilidad de autoformarse. El contenido de YouTube es inmenso y gratuito. Y hay muchos cursos online que puedes encontrar por menos de 20 euros. A fin de cuentas, lo que más se notará si estudias por tu cuenta o en una formación reglada serán las horas que tú le dediques en tu casa.
4) Uno de los grandes problemas de crear videojuegos, es después hacer que se hagan visibles, tienes bastante seguidores en las redes sociales y youtube. Como cuantificarías una posible ventaja que te dé esta mayor audiencia?
Me da miedo pintarme como el malo de la película, pero hay muchas cosas que la gente que aún no se ha introducido en el sector no sabe, pero los que estamos dentro c ompartimos a diario.
El caso de YouTube es similar.
En mi caso dispongo de un canal de YouTube de más de 200.000 seguidores, aunque he de admitir que mi comunidad es mucho más pequeña debido a que hasta hace un año mi contenido era totalmente diferente, y mucha de esa gente dejó de seguir el canal sin eliminar su suscripción. Así que para poder compararlo mejor, hablaré de “media de visitas”, en mi caso, 2.000 por vídeo.
Muchos desarrolladores piensan que la clave del éxito es que un gran youtuber hable de tu juego y nada más alejado de la realidad. Hay un vídeo en YouTube que recomiendo mucho, está publicado por Alva Majo y se titula “¿Qué pasa cuando un youtuber famoso juega a tu juego?” que se adapta bastante a la realidad.
En mi caso, YouTubers como FaviJ (el relativo al Rubius en Italia) jugaron a alguno de mis juegos, y el reporte en beneficio por más de 1 millón de visitas no es capaz ni de pagar el salario de un mes para un empleado. Ni de lejos!
Lo mismo ha pasado con YouTubers de gran calibre en España y los datos son casi imposibles de medir.
Es cierto que el éxito de muchos juegos se ha basado en generar una comunidad de influencers, como el caso reciente de Reventure, pero este juego ha creado una pequeña moda de un par de semanas, donde en la pestaña “Suscripciones” solo veías vídeos sobre el título.
Con esto vuelvo a la pregunta de, ¿es rentable ser influencer (hispanohablante)? Pues simplemente es un pequeño empujón cuando lanzas un nuevo juego en Google Play. Un empujón localizado en la comunidad hispanohablante, muy mal pagada por cierto. Merece la pena el tiempo invertido? Si hablamos de ingresos, ni se acerca.
En definitiva, comprar anuncios podría ser incluso más efectivos si estos están más enfocados a tu target.
4,1) ¿Te machacan mucho para conseguir promoción?
En mi caso no demasiado, como he dicho tengo una comunidad mucho más pequeña de lo que parece, pero antes, cuando mi contenido era de gameplays en general, recibía un par de emails al día seguro. Esto suele depender mucho del YouTuber.
4,2) ¿Como es la relación con otros youtubers/tuiteros ?
Como en todos lados, creas tu grupo de amigos o personas cercanas. Al estar en YouTube acabas compartiendo tu tiempo e inquietudes con otros YouTubers. En mi caso, respecto al sector del “Devtuber” como me gusta llamarlo a mí, me llevo muy bien con Alva Majo, Guinxu o Charditronic. Al compartir tanto nuestras aficiones y aspiraciones, es normal que encajemos mejor. Es como crear tu grupo de amigos en el cole, cuando sales al recreo acabas yendo con los de siempre a jugar al patio.
5) Te has frustrado alguna vez desarrollando un videojuego? has dejado alguno por terminar?
La verdad es que nunca me he frustrado porque me he podido permitir abandonar los proyectos cuando ya no me convencían. 
En este mundillo es muy necesario saber cuándo merece la pena matar un juego y atreverse a desechar todos esos meses de desarrollo antes de que se conviertan en años. Darse cuenta de esto siempre es difícil.
6) ¿Cuál es el videojuego que has desarrollado que más te ha sorprendido por lo negativo, y por lo positivo?
Posiblemente uno de mis juegos favoritos solo está disponible desde mi web (heynaugames.com) ya que es un fan game de Pokemon y no quiero exponer mi cuenta de Google Play publicándolo ahí. En este caso pude trabajar con la mano Rafabetancor al pincel y el resultado me encanta. Desgraciadamente, también fue uno de los juegos menos descargados en su día.
En el lado opuesto tengo un juego que hice en 2017 y en menos de dos días, que a pesar de ser un juego de digno de Game Jam y tener una valoración media de 3 estrellas sobre 5, lo sigue petando en muchos países sud-asiáticos.

7) ¿Cual es tu proceso de inspiración? ¿Como encuentras las ideas?
La inspiración para cada persona es diferente, pero creo que por lo general a todos nos viene cuando nuestro cuerpo está activo y nuestra mente aburrida. Fregando los platos, en la ducha, en el gimnasio.. y por esto siempre es recomendable llevar una libretita encima, o una aplicación para crear notas en tu móvil.
En mi caso, además de lo anterior, también me inspira mucho ver figuritas. Pasear por tiendas de souvenirs, ver exposiciones sobre Tintín o algún otro personaje, ver la decoración de tiendas de ropa... Todo lo que sean personajillos en 3D me transmiten mucho.
Aunque lo más importante, por encima de todo lo que he dicho, es vivir experiencias. Salir a la calle, viajar, ir a fiestas, jugar diferentes videojuegos, leer, etc. Tener una vida “normal” y estar atento a ella te permite pensar y ver lo que tu público piensa y ve. Si estás en el mismo contexto que ellos es probable que tengáis los mismos intereses e inquietudes para poder plasmarlo en tus juegos.
8) ¿Cual es tu referencia en la industria del videojuego?¿ A quien “idolatras” y a quien “detestas” nacional y internacional?
No soy mucho de referencias, menos aún si esperas que responda similar a Kojima. Quizás Ketchapp o Voodoo han sido unos grandes referente a la hora de hacer mis juegos. Su estética y sencillez me encantan y no las veo tan distantes de lo que yo puedo conseguir. Ver su contenido tan cercano al mío en cuanto a complejidad me hace plantearme que solo hay que dar con una de las claves, una que esté a nuestro alcance.
9)¿ Como crees que está la industria del videojuego en España? ¿Y en tu región? ¿Estamos a camino de otra época dorada?
No lo sé. Realmente yo soy ajeno a la industria. Trabajo por mi cuenta, en mi casa. Hace unos años estaba viviendo en Francia, y mi jornada de trabajo era idéntica a la que estoy viviendo ahora en Madrid.
Lo que veo asistiendo a todos los eventos que puedo del sector, es que cada vez somos más desarrolladores y esto es algo genial para el videojuego: Más títulos, más opiniones, más puntos de vista... pero también veo que las empresas no son capaces de absorber a tantos profesionales y la gente que se decide a emprender no lo tiene nada fácil en España.
10) Que consejo darías a alguien que quiera entrar en la industria del videojuego?
Creo que el mejor consejo es que, si ya tienen un trabajo, hagan de esto un hobby hasta que puedan vivir de ello. Que vayan con los pies de plomo.
Si eres capaz de que esto sea tu hobby, es mucho más probable de que sobrevivas, ya que es un trabajo pasional.
Si simplemente quieren dedicarse a esto en sus horas extras y no esperan ganarse la vida de ello, les aseguro que lo van a disfrutar un montón.
11) ¿Y se puede vivir del videojuego a fulltime?
Sí, se puede vivir perfectamente, pero hoy en día necesitas que se alineen varios factores.
Tener tiempo, recursos y paciencia para empezar hasta que pudiera dar sus frutos.
Tener pasión por el tema, hay que investigar, echarle horas y aprender continuamente.
Se capaz de diferenciar lo que a ti te gusta de lo que la gente quiere.
Saber venderse: Marketing, SEO/ASO... muchísimo más allá de “saber poner tweets”.
Tener suerte: Dicen que cuanto más trabajas más suerte tienes, y es verdad, pero esta siempre toma la decisión final.
